{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suporte\\\\Documents\\\\ProjetoReact\\\\PizzaNet2.0\\\\client\\\\src\\\\pages\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport Axios from 'axios';\nimport Logo from '../../componentes/img/logo-da-pizza.png';\nimport { useHistory } from 'react-router';\nimport { useCookies } from 'react-cookie';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [cookies, setCookies] = useCookies([\"user\"]);\n  let history = useHistory();\n\n  const onSubmitLogin = values => {\n    Axios.post(\"http://localhost:3333/login\", {\n      login: values.login,\n      password: values.password\n    }).then(response => {\n      setCookies(\"user\", response.data.msg, {\n        path: \"/\"\n      });\n      console.log(response);\n    });\n  };\n\n  const validationLogin = yup.object().shape({\n    login: yup.string().email(\" Email invalido \").required(\" Campo obrigatorio \"),\n    password: yup.string().min(4, \"Deve haver no minimo 4 digitos\").required(\" Campo obrigatorio \")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-alinha\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-alinha-topo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-alinha-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          className: \"logo-login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {},\n        onSubmit: onSubmitLogin,\n        validationSchema: validationLogin,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"form-Login\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"login\",\n            className: \"input-login\",\n            placeholder: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"span\",\n            name: \"login\",\n            className: \"form-error-login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"password\",\n            className: \"input-login\",\n            placeholder: \"Senha\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"span\",\n            name: \"password\",\n            className: \"form-error-login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"enviar-login\",\n            type: \"submit\",\n            children: \" Enviar \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"U04w8Nss2FEmkqLaa+FMXGi47Hg=\", false, function () {\n  return [useCookies, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Suporte/Documents/ProjetoReact/PizzaNet2.0/client/src/pages/Login/Login.js"],"names":["React","Formik","Form","Field","ErrorMessage","yup","Axios","Logo","useHistory","useCookies","Login","cookies","setCookies","history","onSubmitLogin","values","post","login","password","then","response","data","msg","path","console","log","validationLogin","object","shape","string","email","required","min"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as yup from 'yup'\r\nimport Axios from 'axios'\r\nimport Logo from '../../componentes/img/logo-da-pizza.png'\r\nimport { useHistory } from 'react-router'\r\nimport { useCookies } from 'react-cookie'\r\nimport './Login.css'\r\n\r\nfunction Login(){\r\n\r\n    const [cookies, setCookies] = useCookies([\"user\"])\r\n\r\n    let history = useHistory()\r\n\r\n    const onSubmitLogin = (values) => {\r\n        Axios.post(\"http://localhost:3333/login\",{\r\n            login: values.login,\r\n            password: values.password,\r\n        }).then((response) =>{\r\n            \r\n            setCookies(\"user\", response.data.msg,{\r\n                path: \"/\"\r\n            })\r\n            console.log(response)\r\n        })}\r\n\r\n    const validationLogin = yup.object().shape({\r\n        login: yup\r\n        .string()\r\n        .email(\" Email invalido \")\r\n        .required(\" Campo obrigatorio \"),\r\n        password: yup\r\n        .string()\r\n        .min(4, \"Deve haver no minimo 4 digitos\")\r\n        .required(\" Campo obrigatorio \"),\r\n    })\r\n\r\n\r\n    return(\r\n        <div className = \"main-alinha\">\r\n            \r\n           <div className = \"div-alinha-topo\">\r\n               <div className = \"div-alinha-logo\">\r\n                   <img src={Logo} className = \"logo-login\"/>\r\n                </div>\r\n\r\n                <Formik\r\n                initialValues ={{}}\r\n                onSubmit = {onSubmitLogin}\r\n                validationSchema = {validationLogin}\r\n                >\r\n                    <Form className = \"form-Login\">\r\n\r\n                        <Field name = \"login\" className = \"input-login\" placeholder = \"Entrar\" />\r\n\r\n                        <ErrorMessage\r\n                        component = \"span\"\r\n                        name = \"login\"\r\n                        className = \"form-error-login\"\r\n                        />\r\n\r\n                        <Field name = \"password\" className = \"input-login\" placeholder = \"Senha\" type =\"password\" />\r\n\r\n                        <ErrorMessage\r\n                        component = \"span\"\r\n                        name = \"password\"\r\n                        className = \"form-error-login\"\r\n                        />\r\n\r\n                        <button className = \"enviar-login\" type = \"submit\"> Enviar </button>\r\n\r\n                    </Form>\r\n\r\n                </Formik>\r\n\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}