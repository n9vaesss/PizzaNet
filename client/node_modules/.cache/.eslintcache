[{"C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\index.js":"1","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\App.js":"2","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\routes.js":"3","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Main\\Main.js":"4","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Main\\Header\\Header.js":"5","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Main\\Detalhes\\Detalhes.js":"6","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Main\\Carrossel\\CarrosselPizza.js":"7","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Login\\Login.js":"8","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Main\\Carrossel\\CarrosselBebidas.js":"9","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Cadastrar\\CadastrarLogin.js":"10"},{"size":198,"mtime":1634660965858,"results":"11","hashOfConfig":"12"},{"size":167,"mtime":1634661743257,"results":"13","hashOfConfig":"12"},{"size":615,"mtime":1635008379687,"results":"14","hashOfConfig":"12"},{"size":411,"mtime":1634839666377,"results":"15","hashOfConfig":"12"},{"size":1329,"mtime":1634991358128,"results":"16","hashOfConfig":"12"},{"size":1257,"mtime":1634662914374,"results":"17","hashOfConfig":"12"},{"size":1901,"mtime":1635203651858,"results":"18","hashOfConfig":"12"},{"size":2757,"mtime":1635204179414,"results":"19","hashOfConfig":"12"},{"size":2410,"mtime":1635203648787,"results":"20","hashOfConfig":"12"},{"size":5448,"mtime":1635093508726,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"dbiaa1",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\index.js",[],["49","50"],"C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\App.js",[],"C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\routes.js",[],"C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Main\\Main.js",[],"C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Main\\Header\\Header.js",["51","52","53","54","55","56","57","58"],"import React from \"react\"\r\nimport PizzaHeader from \"../../../componentes/img/PizzaHeader.jpg\"\r\nimport LogoPizza from \"../../../componentes/img/logo-da-pizza.png\"\r\nimport LogoWapp from \"../../../componentes/img/logo-waap.png\"\r\nimport LogoFB from \"../../../componentes/img/logo_facebook.png\"\r\nimport Logoinsta from \"../../../componentes/img/logo_instagram.png\"\r\nimport \"../Header/Header.css\"\r\n\r\nfunction App() {\r\n    return (\r\n      <>\r\n        <div className = \"pizzaHeader\">\r\n\r\n          <img src = {PizzaHeader} className = \"imgHeader\"/>\r\n          <img src = {LogoPizza} className = \"LogoPHeader\"/>\r\n          <a href=\"#\"><img src = {LogoWapp} className = \"LogoWHeader\"/></a>\r\n          <a href=\"#\"><img src = {LogoFB} className = \"LogoFHeader\"/></a>\r\n          <a href=\"#\"><img src = {Logoinsta} className = \"LogoIHeader\"/></a>\r\n\r\n          <div className = \"containerLC\">\r\n\r\n            <a href=\"/login\" className = \"LoginHeader\" >Entrar</a>\r\n            <a href=\"/cadastrarLogin\" className = \"LoginHeader\" >Cadastrar</a>\r\n\r\n          </div>\r\n\r\n          <div className = \"FraseTopo\">\r\n            <h1>Tradicional Pizza Net</h1>\r\n            <p>Confira o nosso cardápio e escolha a sua pizza tradicional italiana preferida!</p>\r\n          </div>\r\n          \r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default App;","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Main\\Detalhes\\Detalhes.js",["59","60","61"],"import React from \"react\"\r\nimport \"../Detalhes/Detalhes.css\"\r\nimport medalha from \"../../../componentes/img/imagem-de-medalha.png\"\r\nimport DPizza from \"../../../componentes/img/desenho-pizza.png\"\r\nimport DFone from \"../../../componentes/img/desenho-de-fone.png\"\r\n\r\nfunction Detalhes() {\r\n    return(\r\n        <div className = \"selecao\">\r\n            <div className = \"divSelecao\">\r\n                <img src={medalha} className = \"medalha\"/>\r\n                <h1>Qualidade</h1>\r\n                <p>Todos nossos produtos são feitos com ingredientes de altíssima qualidade, para entregar o melhor para você</p>\r\n            </div>\r\n\r\n            <div className = \"divSelecao\">\r\n                <img src={DPizza} className = \"DPizza\"/>\r\n                <h1>Sabores</h1>\r\n                <p>Todas nossas pizzas e esfihas possuem um sabor incrível e inesquecível,peça a sua e confira!</p>\r\n            </div>\r\n\r\n            <div className = \"divSelecao\">\r\n                <img src={DFone} className = \"DFone\"/>\r\n                <h1>Atendimento</h1>\r\n                <p>Além de excelentes produtos, possuímos também um ótimo atendimento, seja presencial, delivery ou por ifood.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detalhes","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Main\\Carrossel\\CarrosselPizza.js",["62","63"],"import React from \"react\";\r\nimport './CarrosselPizza.css';\r\nimport { useEffect, useState, useRef } from 'react'\r\n\r\nfunction App() {\r\n\r\n  const [ data, setData ] = useState([])\r\n\r\n  const carrossel = useRef(null)\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3000/static/pizzas.json').then((response) => response.json()).then(setData)\r\n  }, [])\r\n\r\n  const handleLeftClick = (e) =>{\r\n    e.preventDefault();\r\n    console.log(carrossel.current.offsetWidth)\r\n    carrossel.current.scrollLeft -= carrossel.current.offsetWidth\r\n  }\r\n\r\n  const handleRightClick = (e) =>{\r\n    e.preventDefault();\r\n    console.log(carrossel.current.offsetWidth)\r\n    carrossel.current.scrollLeft += carrossel.current.offsetWidth\r\n  }\r\n\r\n  if( !data || !data.length ) return null\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className = \"expo\"> Pizzas </h1>\r\n      <div className =\"carrossel\" ref={carrossel}>\r\n\r\n        {data.map((item) =>{\r\n\r\n          const {id, name, price, image, ingredientes} = item;\r\n\r\n          return(\r\n          <div className = \"item\" key = {id}>\r\n              <div className = \"image\">\r\n                  <img src = {image} alt = {name} className= \"Pizzasimgs\" />\r\n              </div>\r\n\r\n              <div className = \"info\">\r\n                  <span className = \"name\">{name}</span>\r\n                  <span className = \"ingre\">{ingredientes}</span>\r\n                  <button className = \"price\">R$ {price}</button>\r\n              </div>\r\n          </div>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n      <div className = \"buttons\">\r\n\r\n        <button onClick = {handleLeftClick}> \r\n          <img src= \"/static/images/216151_right_chevron_icon.png\" /> \r\n        </button>\r\n\r\n        <button onClick = {handleRightClick}> \r\n          <img src= \"/static/images/216151_right_chevron_icon.png\" /> \r\n        </button>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Login\\Login.js",["64","65","66","67","68"],"import React, { useEffect, useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as yup from 'yup'\r\nimport Axios from 'axios'\r\nimport Logo from '../../componentes/img/logo-da-pizza.png'\r\nimport { useHistory } from 'react-router'\r\nimport { useCookies } from \"react-cookie\"\r\nimport './Login.css'\r\n\r\nfunction Login(){\r\n\r\n    const [cookies, setCookies] = useCookies([\"user\"])\r\n\r\n\r\n    let history = useHistory()\r\n\r\n\r\n    const onSubmitLogin = (values) => {\r\n        Axios.post(\"http://localhost:3333/login\",{\r\n            login: values.login,\r\n            password: values.password,\r\n        }).then((response) =>{\r\n            \r\n            setCookies(\"user\", response.data.msg,{\r\n                path: \"/\"\r\n            })\r\n            if( response.data.msg == 1 ){\r\n                alert(\"Usuario logado\")\r\n                history.push('/')\r\n            }else{\r\n                alert(\" Usuario ou senha incorretos \")\r\n            }\r\n        })}\r\n\r\n    const validationLogin = yup.object().shape({\r\n        login: yup\r\n        .string()\r\n        .email(\" Email invalido \")\r\n        .required(\" Campo obrigatorio \"),\r\n        password: yup\r\n        .string()\r\n        .min(4, \"Deve haver no minimo 4 digitos\")\r\n        .required(\" Campo obrigatorio \"),\r\n    })\r\n\r\n\r\n    return(\r\n        <div className = \"main-alinha\">\r\n            \r\n           <div className = \"div-alinha-topo\">\r\n               <div className = \"div-alinha-logo\">\r\n                   <img src={Logo} className = \"logo-login\"/>\r\n                </div>\r\n\r\n                <Formik\r\n                initialValues ={{}}\r\n                onSubmit = {onSubmitLogin}\r\n                validationSchema = {validationLogin}\r\n                >\r\n                    <Form className = \"form-Login\">\r\n\r\n                        <Field name = \"login\" className = \"input-login\" placeholder = \"Entrar\" />\r\n\r\n                        <ErrorMessage\r\n                        component = \"span\"\r\n                        name = \"login\"\r\n                        className = \"form-error-login\"\r\n                        />\r\n\r\n                        <Field name = \"password\" className = \"input-login\" placeholder = \"Senha\" type =\"password\" />\r\n\r\n                        <ErrorMessage\r\n                        component = \"span\"\r\n                        name = \"password\"\r\n                        className = \"form-error-login\"\r\n                        />\r\n\r\n                        <button className = \"enviar-login\" type = \"submit\"> Enviar </button>\r\n\r\n                        <a className = \"enviar-login1\" href= \"/cadastrarLogin\">Cadastrar</a>\r\n\r\n                    </Form>\r\n\r\n                </Formik>\r\n\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Main\\Carrossel\\CarrosselBebidas.js",["69","70","71","72"],"import React from \"react\";\r\nimport './CarrosselPizza.css';\r\nimport { useCookies } from \"react-cookie\"\r\nimport { useHistory } from 'react-router'\r\nimport { useEffect, useState, useRef } from 'react'\r\n\r\nfunction App() {\r\n\r\n  const [ data, setData ] = useState([])\r\n  const [cookies, setCookies] = useCookies([\"user\"])\r\n\r\n  const carrossel = useRef(null)\r\n\r\n  let history = useHistory()\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3000/static/bebidas.json').then((response) => response.json()).then(setData)\r\n  }, [])\r\n\r\n  const handleLeftClick = (e) =>{\r\n    e.preventDefault();\r\n    console.log(carrossel.current.offsetWidth)\r\n    carrossel.current.scrollLeft -= carrossel.current.offsetWidth\r\n  }\r\n\r\n  const handleRightClick = (e) =>{\r\n    e.preventDefault();\r\n    console.log(carrossel.current.offsetWidth)\r\n    carrossel.current.scrollLeft += carrossel.current.offsetWidth\r\n  }\r\n\r\n  const handleClickCompras = () =>{\r\n      if(cookies.user == 1){\r\n        history.push('/compras')\r\n      }else{\r\n        history.push('/login')\r\n      }\r\n  }\r\n\r\n  if( !data || !data.length ) return null\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className = \"expo\"> Bebidas </h1>\r\n      <div className =\"carrossel\" ref={carrossel}>\r\n\r\n        {data.map((item) =>{\r\n\r\n          const {id, name, price, image, ingredientes} = item;\r\n\r\n          return(\r\n          <div className = \"item\" key = {id}>\r\n              <div className = \"image\">\r\n                  <img src = {image} alt = {name} className= \"Pizzasimgs\" />\r\n              </div>\r\n\r\n              <div className = \"info\">\r\n                  <span className = \"name\">{name}</span>\r\n                  <span className = \"ingre\">{ingredientes}</span>\r\n                  <span className = \"price\">R$ {price}</span>\r\n              </div>\r\n          </div>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n      <div className = \"buttons\">\r\n\r\n        <button onClick = {handleLeftClick}> \r\n          <img src= \"/static/images/216151_right_chevron_icon.png\" /> \r\n        </button>\r\n\r\n        <button onClick = {handleRightClick}> \r\n          <img src= \"/static/images/216151_right_chevron_icon.png\" /> \r\n        </button>\r\n\r\n      </div>\r\n      \r\n        <div className = \"alinha-botao-enviar\"> \r\n          <button onClick = {handleClickCompras} className = \"botao-enviar-comprar\">Comprar</button>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Suporte\\Documents\\ProjetoReact\\PizzaNet2.0\\client\\src\\pages\\Cadastrar\\CadastrarLogin.js",["73","74","75"],"import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as yup from 'yup'\r\nimport Axios from 'axios'\r\nimport { useHistory } from 'react-router'\r\nimport Logo from \"../../componentes/img/logo-da-pizza.png\"\r\nimport InputMask from \"react-input-mask\";\r\nimport \"./CadastrarLogin.css\"\r\n\r\nfunction Cadastrar(){\r\n\r\n    let history = useHistory()\r\n    const onSubmitCadastro = (values) => {\r\n        Axios.post(\"http://localhost:3333/cadastrar\",{\r\n            login: values.login,\r\n            password: values.password,\r\n            Confirmpassword: values.Confirmpassword,\r\n            endereco: values.endereco,\r\n            numero: values.numero,\r\n            telefone: values.telefone\r\n        }).then((response) =>{\r\n            if( response.data.msg == 1)\r\n            {\r\n                alert(\"Usuario criado com sucesso!\")\r\n                history.push('/')\r\n            }else{\r\n                alert(response.data.msg)\r\n            }\r\n            console.log(response)\r\n        })}\r\n\r\n    const validationCadastro = yup.object().shape({\r\n        login: yup\r\n        .string()\r\n        .email(\" Email invalido \")\r\n        .required(\" Campo obrigatorio \"),\r\n        password: yup\r\n        .string()\r\n        .min(4, \"Deve haver no minimo 4 digitos\")\r\n        .required(\" Campo obrigatorio \"),\r\n        Confirmpassword: yup\r\n        .string()\r\n        .required(\" Campo obrigatorio \")\r\n        .oneOf([yup.ref(\"password\"), null], \"As senhas nao sao iguais\"),\r\n        endereco: yup.string()\r\n        .required(\" Campo obrigatorio \"),\r\n        numero: yup.string()\r\n        .required(\" Campo obrigatorio \"),\r\n        telefone: yup.number()\r\n        .typeError(\"Isso não parece um número de telefone\")\r\n        .positive(\"Isso não parece um número de telefone\")\r\n        .integer(\"Um número de telefone não pode incluir uma vírgula decimal\")\r\n        .min(8)\r\n        .required(\" Campo obrigatorio \"),\r\n    })\r\n\r\n\r\n    return(\r\n        <div className = \"main-alinha\">\r\n            \r\n           <div className = \"div-alinha-topo\">\r\n               <div className = \"div-alinha-logo\">\r\n                   <img src={Logo} className = \"logo-login\"/>\r\n                </div>\r\n\r\n                <Formik\r\n                initialValues ={{}}\r\n                onSubmit = {onSubmitCadastro}\r\n                validationSchema = {validationCadastro}\r\n                >\r\n                    <Form >\r\n\r\n                        <div className = \"form-LoginC\">\r\n                            <div className = \"div-alinha-topo-login\">\r\n\r\n                                <Field name = \"login\" className = \"input-login\" placeholder = \"Email\" />\r\n\r\n                                <ErrorMessage\r\n                                component = \"span\"\r\n                                name = \"login\"\r\n                                className = \"form-error-login\"\r\n                                />\r\n\r\n                                <Field name = \"password\" className = \"input-login\" placeholder = \"Senha\" type =\"password\" />\r\n\r\n                                <ErrorMessage\r\n                                component = \"span\"\r\n                                name = \"password\"\r\n                                className = \"form-error-login\"\r\n                                />\r\n\r\n                                <Field name = \"Confirmpassword\" className = \"input-login\" placeholder = \"Confirme sua senha\" type =\"password\" />\r\n\r\n                                <ErrorMessage\r\n                                component = \"span\"\r\n                                name = \"Confirmpassword\"\r\n                                className = \"form-error-login\"\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className = \"div-alinha-topo-login\">\r\n\r\n                                <Field name = \"endereco\" className = \"input-login\" placeholder = \"Endereco\"/>\r\n\r\n                                <ErrorMessage\r\n                                    component = \"span\"\r\n                                    name = \"endereco\"\r\n                                    className = \"form-error-login\"\r\n                                />\r\n\r\n                                <Field name = \"numero\" className = \"input-login\" placeholder = \"Numero\"/>\r\n\r\n                                <ErrorMessage\r\n                                    component = \"span\"\r\n                                    name = \"numero\"\r\n                                    className = \"form-error-login\"\r\n                                />\r\n                            \r\n                                <Field name = \"telefone\" className = \"input-login\" placeholder = \"Telefone\" mask=\"(xx) xxxx-xxxx\"/>\r\n                                \r\n                                <ErrorMessage\r\n                                    component = \"span\"\r\n                                    name = \"telefone\"\r\n                                    className = \"form-error-login\"\r\n                                />\r\n                            </div>\r\n                        </div>           \r\n\r\n                        <div className = \"alinha-botao\">\r\n                            <button className = \"enviar-login\" type = \"submit\"> Enviar </button>\r\n                        </div>\r\n\r\n                    </Form>\r\n\r\n                    \r\n\r\n                </Formik>\r\n\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cadastrar;",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":14,"column":11,"nodeType":"82","endLine":14,"endColumn":61},{"ruleId":"80","severity":1,"message":"81","line":15,"column":11,"nodeType":"82","endLine":15,"endColumn":61},{"ruleId":"83","severity":1,"message":"84","line":16,"column":11,"nodeType":"82","endLine":16,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":16,"column":23,"nodeType":"82","endLine":16,"endColumn":72},{"ruleId":"83","severity":1,"message":"84","line":17,"column":11,"nodeType":"82","endLine":17,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":17,"column":23,"nodeType":"82","endLine":17,"endColumn":70},{"ruleId":"83","severity":1,"message":"84","line":18,"column":11,"nodeType":"82","endLine":18,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":18,"column":23,"nodeType":"82","endLine":18,"endColumn":73},{"ruleId":"80","severity":1,"message":"81","line":11,"column":17,"nodeType":"82","endLine":11,"endColumn":59},{"ruleId":"80","severity":1,"message":"81","line":17,"column":17,"nodeType":"82","endLine":17,"endColumn":57},{"ruleId":"80","severity":1,"message":"81","line":23,"column":17,"nodeType":"82","endLine":23,"endColumn":55},{"ruleId":"80","severity":1,"message":"81","line":57,"column":11,"nodeType":"82","endLine":57,"endColumn":70},{"ruleId":"80","severity":1,"message":"81","line":61,"column":11,"nodeType":"82","endLine":61,"endColumn":70},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"89","line":1,"column":28,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"90","line":12,"column":12,"nodeType":"87","messageId":"88","endLine":12,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":27,"column":35,"nodeType":"93","messageId":"94","endLine":27,"endColumn":37},{"ruleId":"80","severity":1,"message":"81","line":52,"column":20,"nodeType":"82","endLine":52,"endColumn":62},{"ruleId":"85","severity":1,"message":"95","line":10,"column":19,"nodeType":"87","messageId":"88","endLine":10,"endColumn":29},{"ruleId":"91","severity":1,"message":"92","line":33,"column":23,"nodeType":"93","messageId":"94","endLine":33,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":70,"column":11,"nodeType":"82","endLine":70,"endColumn":70},{"ruleId":"80","severity":1,"message":"81","line":74,"column":11,"nodeType":"82","endLine":74,"endColumn":70},{"ruleId":"85","severity":1,"message":"96","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":22,"column":35,"nodeType":"93","messageId":"94","endLine":22,"endColumn":37},{"ruleId":"80","severity":1,"message":"81","line":63,"column":20,"nodeType":"82","endLine":63,"endColumn":62},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'cookies' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setCookies' is assigned a value but never used.","'InputMask' is defined but never used.","no-global-assign","no-unsafe-negation"]